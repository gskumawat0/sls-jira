	
useDotenv: true

custom:
  membersTable: members
  tasksTable: tasks
  dotenv:
    logging: false
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - NODE_ENV

  serverless-offline:
    httpPort: 5000
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      port: 8082
      cors: true

service: sls-jira
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: ap-south-1
  profile: sls-jira
  iam:
    role:
      name: sls-jira-role
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ MembersTable, Arn ]
            - Fn::GetAtt: [ TasksTable, Arn ]
  environment:
    MEMBERS_TABLE: ${self:custom.membersTable}
    TASKS_TABLE: ${self:custom.tasksTable}

  httpApi:
    cors: true
    authorizers:
      JiraAdminAuthorizer:
        type: request
        functionName: JiraAdminAuthorizer
      JiraManagerAuthorizer:
        type: request
        functionName: JiraManagerAuthorizer
      JiraMemberAuthorizer:
        type: request
        functionName: JiraMemberAuthorizer


plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

resources:
  Resources:
    MembersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.membersTable}
    TasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tasksTable}

functions:
  - ${file(./functions/healthCheck.yml)}
  - ${file(./functions/task.yml)}
  - ${file(./functions/member.yml)}
  - ${file(./functions/auth.yml)}
  - ${file(./functions/authorizers.yml)}
